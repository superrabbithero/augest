"use strict";(self["webpackChunkaugest"]=self["webpackChunkaugest"]||[]).push([[5157],{85157:function(s,l,n){n.r(l),n.d(l,{default:function(){return L}});var a=n(19812),e=(0,a._)("head",null,null,-1),t=(0,a._)("h2",null,"自定义博客主题中元素的样式",-1),c=(0,a._)("h3",null,"提要",-1),r=(0,a._)("p",null,[(0,a.Uk)("在markdown编辑博客时发现一些word中的样式，如改变字体颜色、字体、字号、背景颜色等无法灵活实现，因此在md文本中添加了"),(0,a._)("code",null,"<font>"),(0,a.Uk)("的类名来修改文档中文字的样式。因为md文本文件中添加的"),(0,a._)("code",null,"<style>"),(0,a.Uk)("样式只能作用在当前文件中，所以需要进行统一设置。以下就是挂载自定义css的办法（不建议修改源码），同样可以添加自定义js代码。")],-1),o=(0,a._)("h3",null,"挂载办法",-1),u=(0,a._)("p",null,"在butterfly的配置文件中找到以下代码",-1),_=(0,a._)("pre",null,[(0,a._)("code",{"v-pre":"",class:"language-YAML"},[(0,a._)("span",{class:"hljs-comment"},"# Inject"),(0,a.Uk)("\n"),(0,a._)("span",{class:"hljs-comment"},"# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)"),(0,a.Uk)("\n"),(0,a._)("span",{class:"hljs-comment"},"# 插入代码到头部 </head> 之前 和 底部 </body> 之前"),(0,a.Uk)("\n"),(0,a._)("span",{class:"hljs-attr"},"inject:"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"hljs-attr"},"head:"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"hljs-bullet"},"-"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},"<link"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},'rel="stylesheet"'),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},'href="css文件路径">'),(0,a.Uk)(" \n  "),(0,a._)("span",{class:"hljs-attr"},"bottom:"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"hljs-bullet"},"-"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},"<script"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},'src="js文件路径"><\/script>'),(0,a.Uk)("\n")])],-1),k=(0,a._)("p",null,[(0,a.Uk)("通常在head中挂载css代码，在bottom中挂载js代码。 css代码通常放在"),(0,a._)("code",null,"\\butterfly\\source\\css"),(0,a.Uk)("目录下，js代码通常放在"),(0,a._)("code",null,"\\butterfly\\source\\js"),(0,a.Uk)("目录下")],-1),p=(0,a._)("h3",null,"案例：实现修改md中文字颜色",-1),h=(0,a._)("h4",null,"使用md语法直接上色",-1),U=(0,a._)("p",null,"一种简单的办法是在需要的文字上直接使用md语法套上颜色",-1),d=(0,a._)("pre",null,[(0,a._)("code",{"v-pre":""},"$\\color{#fff}{上色文字}$\n")],-1),f=(0,a._)("p",null,[(0,a.Uk)("使用过程中发现这种语法在别的md编辑器上可以生效，但是hexo部署后$\\color后的所有文字的截断了（反正不好用就没深究原因），于是改用了"),(0,a._)("code",null,"<font>"),(0,a.Uk)("标签")],-1),i=(0,a._)("pre",null,[(0,a._)("code",{"v-pre":""},'  我是<font face="黑体">黑体</font>\n  我是<font color=darkred>暗红色</font>\n  我是<font color= #871F78>紫色</font>\n  我是<font size=5>尺寸5</font>\n  我是<font face="黑体" color=lightgreen size=10>黑体，绿色，尺寸为10</font>\n')],-1),g=(0,a._)("p",null,"效果是这样的：",-1),j=(0,a._)("p",null,"用的时候就会发现还是很麻烦，每次都要记颜色代码而且不能自定义背景颜色，使用css外挂就能轻松实现自定义的统一样式。",-1),m=(0,a._)("h4",null,"使用css外挂实现",-1),b=(0,a._)("p",null,[(0,a.Uk)("在"),(0,a._)("code",null,"\\butterfly\\source\\css"),(0,a.Uk)("创建"),(0,a._)("code",null,"mystyle.css"),(0,a.Uk)("文件，写一个类"),(0,a._)("code",null,".c-orange"),(0,a.Uk)("用于将标记文字变为橘黄色")],-1),y=(0,a._)("pre",null,[(0,a._)("code",{"v-pre":"",class:"language-css"},[(0,a._)("span",{class:"hljs-selector-class"},".c-orange"),(0,a.Uk)("{\n  "),(0,a._)("span",{class:"hljs-attribute"},"color"),(0,a.Uk)(": "),(0,a._)("span",{class:"hljs-number"},"#FF7F50"),(0,a.Uk)("\n}\n")])],-1),w=(0,a._)("p",null,"然后在butterfly的主题配置文件中引用，方法上面讲过了这里直接贴配置结果。",-1),v=(0,a._)("pre",null,[(0,a._)("code",{"v-pre":"",class:"language-YAML"},[(0,a._)("span",{class:"hljs-attr"},"inject:"),(0,a.Uk)("\n  "),(0,a._)("span",{class:"hljs-attr"},"head:"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"hljs-bullet"},"-"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},"<link"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},'rel="stylesheet"'),(0,a.Uk)(),(0,a._)("span",{class:"hljs-string"},'href="/css/mystyle.css">'),(0,a.Uk)(" \n  "),(0,a._)("span",{class:"hljs-attr"},"bottom:"),(0,a.Uk)("\n    "),(0,a._)("span",{class:"hljs-comment"},'# - <script src="xxxx"><\/script>'),(0,a.Uk)("\n")])],-1),x=(0,a._)("p",null,"最后在md中直接套标签和类就行了",-1),W=(0,a._)("pre",null,[(0,a._)("code",{"v-pre":"",class:"language-markdown"},[(0,a.Uk)("这个"),(0,a._)("span",{class:"language-xml"},[(0,a._)("span",{class:"hljs-tag"},[(0,a.Uk)("<"),(0,a._)("span",{class:"hljs-name"},"font"),(0,a.Uk)(),(0,a._)("span",{class:"hljs-attr"},"class"),(0,a.Uk)("="),(0,a._)("span",{class:"hljs-string"},'"c-orange"'),(0,a.Uk)(">")])]),(0,a.Uk)("橙色"),(0,a._)("span",{class:"language-xml"},[(0,a._)("span",{class:"hljs-tag"},[(0,a.Uk)("</"),(0,a._)("span",{class:"hljs-name"},"font"),(0,a.Uk)(">")])]),(0,a.Uk)("就是标记出来的文字\n")])],-1),z=(0,a._)("p",null,"结果是这样的：",-1),F=(0,a._)("p",null,"以上。",-1),$=(0,a._)("p",null,[(0,a._)("img",{src:"https://picx.zhimg.com/80/v2-a531ac583d5ff36571063131ddb70453_720w.webp?source=1940ef5c",alt:""})],-1);function q(s,l){var n=(0,a.up)("font");return(0,a.wg)(),(0,a.iD)("section",null,[(0,a._)("html",null,[e,(0,a._)("body",null,[t,c,r,o,u,_,k,p,h,U,d,f,i,g,(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("我是"),(0,a.Wm)(n,{face:"宋体"},{default:(0,a.w5)((function(){return[(0,a.Uk)("宋体")]})),_:1}),(0,a.Uk)(" 我是"),(0,a.Wm)(n,{color:"darkred"},{default:(0,a.w5)((function(){return[(0,a.Uk)("暗红色")]})),_:1}),(0,a.Uk)(" 我是"),(0,a.Wm)(n,{color:"#871F78"},{default:(0,a.w5)((function(){return[(0,a.Uk)("紫色")]})),_:1}),(0,a.Uk)(" 我是"),(0,a.Wm)(n,{size:"5"},{default:(0,a.w5)((function(){return[(0,a.Uk)("尺寸5")]})),_:1}),(0,a.Uk)(" 我是"),(0,a.Wm)(n,{face:"黑体",color:"lightgreen",size:"10"},{default:(0,a.w5)((function(){return[(0,a.Uk)("黑体，绿色，尺寸为10")]})),_:1})])]),j,m,b,y,w,v,x,W,z,(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("这个"),(0,a.Wm)(n,{class:"c-orange"},{default:(0,a.w5)((function(){return[(0,a.Uk)("橙色")]})),_:1}),(0,a.Uk)("就是标记出来的文字")])]),F,$])])])}var A=n(48998);const C={},I=(0,A.Z)(C,[["render",q]]);var L=I}}]);
//# sourceMappingURL=5157-legacy.ebca85bd.js.map
{"version":3,"file":"js/3604-legacy.9c12ca60.js","mappings":"4KAMSA,EAAAA,EAAAA,GAAa,qB,GAAMA,EAAAA,EAAAA,GAAW,UAAP,MAAE,G,GAClCA,EAAAA,EAAAA,GAA4M,SAAzM,yMAAqM,G,GACxMA,EAAAA,EAAAA,GAAa,UAAT,QAAI,G,GACRA,EAAAA,EAAAA,GAAe,UAAX,UAAM,G,GACVA,EAAAA,EAAAA,GACa,aADCA,EAAAA,EAAAA,GACP,QADa,QAAM,IAAG,uCAC7B,G,GACAA,EAAAA,EAAAA,GAA0B,UAAtB,qBAAiB,G,GACrBA,EAAAA,EAAAA,GAoBa,aApBCA,EAAAA,EAAAA,GAoBP,QApBa,QAAM,IAAG,0YAoB7B,G,GACAA,EAAAA,EAAAA,GAAqB,UAAjB,gBAAY,G,GAChBA,EAAAA,EAAAA,GAAW,SAAR,QAAI,G,GACPA,EAAAA,EAAAA,GAYa,aAZCA,EAAAA,EAAAA,GAYP,QAZa,QAAM,IAAG,mQAY7B,G,GACAA,EAAAA,EAAAA,GAA0B,SAAvB,uBAAmB,G,GACtBA,EAAAA,EAAAA,GAAe,UAAX,UAAM,G,GACVA,EAAAA,EAAAA,GAA4E,SAAzE,yEAAqE,G,GACxEA,EAAAA,EAAAA,GA6Ba,aA7BCA,EAAAA,EAAAA,GA6BP,QA7Ba,QAAM,IAAG,0rBA6B7B,G,GACAA,EAAAA,EAAAA,GAAiB,UAAb,YAAQ,G,GACoFA,EAAAA,EAAAA,GAAwC,YAAzB,sBAAkB,G,GACjIA,EAAAA,EAAAA,GAca,aAdCA,EAAAA,EAAAA,GAcP,QAda,QAAM,IAAG,8hBAc7B,G,sDAlGAC,EAAAA,EAAAA,IAmGwB,iBA7FrBD,EAAAA,EAAAA,GA6FW,aA7FLE,GAAaF,EAAAA,EAAAA,GA6Ff,aA7FqBG,EAC5BC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAqBAC,EACAC,EACAC,EAaAC,EACAC,EACAC,EACAC,EA8BAC,GACAjB,EAAAA,EAAAA,GAAuJ,WAnFvJkB,EAAAA,EAAAA,IAmFG,kBAAaC,EAAAA,EAAAA,IAAmIC,EAAA,MAnFnJC,SAAAC,EAAAA,EAAAA,KAmFmB,iBAA6E,EAnFhGJ,EAAAA,EAAAA,IAmFmB,iFAA6EK,GAnFhGL,EAAAA,EAAAA,IAmFwI,W,IAnFxIM,EAAA,MAoFAC,O,gBCnFA,MAAMC,EAAS,CAAC,EAGVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O","sources":["webpack://augest/./src/assets/docs/vue-markdown-loader使用.md","webpack://augest/./src/assets/docs/vue-markdown-loader使用.md?f048"],"sourcesContent":["<template><section><!--\ntitle:vue-markdown-loader使用\ndate: 2024-05-10 01:00:00\ntags : - markdown - vue\ncategories:\n    - 建站日志\n--><html><head></head><body><h3>前言</h3>\n<p>去年12月左右有了自己制作博客的想法，当时使用markdown-it前端解析了md文件，也没怎么去管。最近再看代码的时候感觉特别长，而且在展示本地的博客内容时loading界面时间较长，就想着有没有预加载的可能。问了gpt3.5后推荐了markdown-loader，再百度了一下，大概是在打包的时候，利用webpack将.md的文件预处理成html文件，因此静态访问就不会再loading了。</p>\n<h3>基本使用</h3>\n<h4>1.添加依赖</h4>\n<pre v-pre=\"\"><code v-pre=\"\">npm install vue-markdown-loader\n</code></pre>\n<h4>2.jsconfig.json配置</h4>\n<pre v-pre=\"\"><code v-pre=\"\">configureWebpack: {\n    module: {\n      rules: [\n        {\n          test: /\\.md$/,\n          use: [\n            {\n              loader: 'vue-loader'\n            },\n            {\n              loader: 'vue-markdown-loader/lib/markdown-compiler',\n              options: {\n                raw: true\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n</code></pre>\n<h4>3.components</h4>\n<p>简单调用</p>\n<pre v-pre=\"\"><code v-pre=\"\">&lt;template&gt;\n    &lt;div class=\"markdown-body\" ref=\"markdownRef\"&gt;\n        &lt;markdowncontent&gt;&lt;/markdowncontent&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport markdowncontent from '.md路径'\nexport default {\n    components:{\n        markdowncontent\n    }\n}\n</code></pre>\n<p>以上一个.md的文件就能展示在网页上了</p>\n<h3>添加动态组件</h3>\n<p>基本使用只能挂载一个固定的.md文件，如果通过传入的文件名作为参数，动态加载组件怎么做呢。gpt让我用import()加载组件，代码改成：</p>\n<pre v-pre=\"\"><code v-pre=\"\">&lt;template&gt;\n    &lt;div class=\"markdown-body\"&gt;\n        &lt;component :is=\"markdownContent\" /&gt; //使用:is动态挂载组件\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n\nimport 'github-markdown-css'; //用这个可以美化.md样式，应用在markdown-body类下\n\nexport default {\n    props:{\n        mdFileName:{\n            type:String,\n            required:true\n        }\n    },\n    data() {\n        return {\n            markdownContent: null,\n        }\n    },\n    created() {\n        var that = this\n        import('@/assets/docs/' + this.mdFileName + '.md').then( async module =&gt; {\n            const markdownContent = module.default; // 获取默认导出的组件\n            that.markdownContent = markdownContent;\n        })\n    },\n}\n</code></pre>\n<h3>如何制作一个目录</h3>\n<p>目录的话需要找到页面上的/<h>标签,使用动态挂载组件的方式之后，我始终找不到最后生成的页面dom。最后只能在upadated里才能找到.md文件挂载渲染成功后的dom。之后就是常规的用<code v-pre=\"\">querySelectorAll()</code>查找所有h标签</h></p>\n<pre v-pre=\"\"><code v-pre=\"\">//需将findMarkdownHeadings放在updated中执行\nfindMarkdownHeadings() {\n    // 选择class为'markdown-body'下所有的h1-6元素\n    const headings = document.querySelectorAll('.markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6');\n\n    // 转换成数组\n    headingsList = Array.from(headings).map(element =&gt; {\n    return {\n        level: parseInt(element.tagName[1]), // 提取标题级别\n        content: element.textContent.trim(),// 提取标题内容\n        ele:element //dom对象，用于目录和页面的滚动交互\n        };\n    });\n}\n</code></pre>\n</body></html></section></template>\n\n","import { render } from \"./vue-markdown-loader使用.md?vue&type=template&id=64e8bab7\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_createTextVNode","_createVNode","_component_h","default","_withCtx","_hoisted_17","_","_hoisted_18","script","__exports__","render"],"sourceRoot":""}
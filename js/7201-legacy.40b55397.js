"use strict";(self["webpackChunkaugest"]=self["webpackChunkaugest"]||[]).push([[7201],{77201:function(n,e,t){t.r(e),t.d(e,{default:function(){return o}});var a=t(19812),l=(0,a._)("html",null,[(0,a._)("head"),(0,a._)("body",null,[(0,a._)("h3",null,"分页组件"),(0,a._)("p",null,"组件需展示页数、上一页、下一页、跳转到等功能。并且在父组件中灵活调用"),(0,a._)("h3",null,"$emit"),(0,a._)("p",null,[(0,a.Uk)("在子组件"),(0,a._)("code",null,"pagination.vue"),(0,a.Uk)("中使用$emit将跳转页码的事件传递给父组件，让父组件搜索指定页码的列表。")]),(0,a._)("pre",null,[(0,a._)("code",{"v-pre":""},"toPage(index){\n\tif(this.currentPage != index){\n\t\tthis.currentPage=index\n\t\tthis.$emit('page-change', this.currentPage);\n    }\n}\n")]),(0,a._)("p",null,[(0,a.Uk)("父组件中调用"),(0,a._)("code",null,"pagination"),(0,a.Uk)("组件，并监听传递的page-change事件。")]),(0,a._)("pre",null,[(0,a._)("code",{"v-pre":""},'<template>\n <pagination @page-change="handlePageChange"></pagination>\n</template>\n<script>\n\texport default {\n\t\tmethods:{\n\t\t    handlePageChange(page){\n\t\t      this.filteredJson = this.searchPosts(page).results\n\t\t    },\n\t\t    searchPosts(pageNum){\n\t\t    \t//查询事件\n\t\t    }\n\t\t},\n\n\t}\n<\/script>\n')]),(0,a._)("h3",null,"调用"),(0,a._)("p",null,"导入组件模板"),(0,a._)("pre",null,[(0,a._)("code",{"v-pre":""},"import pagination from '../Pagination.vue'\n")]),(0,a._)("p",null,"需传递页码总数"),(0,a._)("pre",null,[(0,a._)("code",{"v-pre":""},'<pagination totalPages="30" @page-change="handlePageChange"></pagination>\n')])])],-1),i=[l];function u(n,e){return(0,a.wg)(),(0,a.iD)("section",null,i)}var p=t(48998);const r={},g=(0,p.Z)(r,[["render",u]]);var o=g}}]);
//# sourceMappingURL=7201-legacy.40b55397.js.map